apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: "*"
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"dtwin-backend:staging","namespace":"dtwin"},"fieldPath":"spec.template.spec.containers[?(@.name==\"dtwin-backend\")].image","pause":"false"}]
    kompose.cmd: kompose convert
    kompose.version: 1.37.0 (fb0539e64)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.37.0 (fb0539e64)
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - name: backend
          image: image-registry.openshift-image-registry.svc:5000/dtwin/dtwin-backend@sha256:70c70452120429dcbf3933a2a10502b9265c0823d189831d93a9813692813552
          ports:
            - containerPort: 5000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: env
          env:
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-secret
                  key: OPENAI_API_KEY
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-key
                  key: SECRET_KEY
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password
                  key: POSTGRES_PASSWORD
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-url
                  key: DATABASE_URL
