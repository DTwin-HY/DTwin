[tool.poetry]
name = "src"
version = "0.1.0"
description = ""
authors = ["tiaineno <olli.vj.tiainen@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
dotenv = "^0.9.9"
flask = "^3.1.2"
flask-cors = "^6.0.1"
requests = "^2.32.5"
loguru = "^0.7.3"
sqlalchemy = "^2.0.43"
flask-sqlalchemy = "^3.1.1"
psycopg2 = "^2.9.10"
langgraph = "^0.6.6"
langchain = {extras = ["openai"], version = "^0.3.27"}
langchain-openai = "^0.3.32"
grandalf = "^0.8"
pytest = "^8.4.2"
flask-login = "^0.6.3"
flask-bcrypt = "^1.0.1"
psycopg2-binary = "^2.9.10"
gunicorn = "^23.0.0"
flask-migrate = "^4.1.0"
langgraph-supervisor = "^0.0.29"
langchain-tavily = "^0.2.11"
langchain-community = "<0.4"
pandas = "^2.3.3"
matplotlib = "^3.10.7"
langgraph-checkpoint-postgres = "^3.0.0"
psycopg-binary = "^3.2.11"
langchain-community = "<0.4"

[tool.poetry.scripts]
back = "src.index:start"

[tool.poetry.group.dev.dependencies]
pylint = "^3.3.8"
black = "^25.9.0"
pytest-cov = "^7.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
known_first_party = ["src"]
default_section = "THIRDPARTY"

[tool.pylint]
max-line-length = 100
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "unused-import",
    "invalid-name",
    "redefined-outer-name",
    "broad-exception-caught",
    "too-few-public-methods"
]
